# .github/workflows/ci.yml

# define name of the workflow which will be displayed on GitHub UI. you can use any name you want to.
name: Continuous Integration

# # this is trigger CI on push and PR for main branch only
# on:
#   # if we push to branch main, then trigger CI
#   push:
#     branches: [ main ]
#   # pr means pull request against any branch
#   # if we create a pull request, against branch main  then trigger CI
#   pull_request:
#     branches: [ main ]

on:
  push:
    branches: [ master, develop ]
  pull_request:

# jobs is a list of jobs that will be executed in parallel on different runners
jobs:
  # build is the name of the job that will be displayed on GitHub UI. you can use any name you want to.
  build:
    # runs-on is used to specify the type of runner that will execute the job. you can use any runner you want to.
    runs-on: ubuntu-latest

    # steps is a list of steps that will be executed in the job
    steps:
      - name: Checkout code
      # uses is used to specify the action that will be executed. here we are using checkout action to checkout the code.
        uses: actions/checkout@v4
        # with is use to pass the input to the action. here we are passing the input fetch-depth to the checkout action. fetch depth is used to specify the number of commits to fetch. 0 means all history for all branches and tags.
        with:
          fetch-depth:
            0

      # install nodejs , you can give any name if you want
      # it will install nodejs version 20.x and set up the action for us.
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Install Deps
        run: npm install

      - name: Run linters
        run: npm run lint:ts

      - name: Run tests
        run: npm run test

      - name: Run build
        run: npm run build:dev
